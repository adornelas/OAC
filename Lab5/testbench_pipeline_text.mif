DEPTH = 16384;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
00000000 : 00a00513;   % 4: 	addi a0, zero, 10	# a0 = 0x0000000A %
00000001 : 00000013;   % 5: 	nop %
00000002 : 00000013;   % 6: 	nop %
00000003 : 00000013;   % 7: 	nop %
00000004 : 00a505b3;   % 8: 	add a1, a0, a0		# a1 = 0x00000014 %
00000005 : 00000013;   % 9: 	nop %
00000006 : 00000013;   % 10: 	nop %
00000007 : 00000013;   % 11: 	nop %
00000008 : 40a585b3;   % 12: 	sub a1, a1, a0		# a1 = 0x0000000A %
00000009 : 00250513;   % 13: 	addi a0, a0, 2		# a0 = 0x0000000C %
0000000a : 00000013;   % 15: 	nop %
0000000b : 00000013;   % 16: 	nop %
0000000c : 00000013;   % 17: 	nop %
0000000d : 00000013;   % 20: 	nop %
0000000e : 00000013;   % 21: 	nop %
0000000f : 00000013;   % 22: 	nop %
00000010 : 00058593;   % 23: 	addi a1, a1, 0		# a1 = 0x0000000A %
00000011 : 00251513;   % 25: 	slli a0, a0, 2		# a0 = 0x00000030 %
00000012 : 00007537;   % 26: 	lui a0, 7		# a0 = 0x00007000 %
00000013 : 00100513;   % 29: 	addi a0, zero, 1	# a0 = 0x00000001 %
00000014 : 00300593;   % 30: 	addi a1, zero, 3	# a1 = 0x00000003 %
00000015 : 00000013;   % 31: 	nop %
00000016 : 00000013;   % 32: 	nop %
00000017 : 00000013;   % 33: 	nop %
00000018 : 00b57633;   % 34: 	and a2, a0, a1		# a2 = 0x00000001 %
00000019 : 00b56633;   % 35: 	or a2, a0, a1		# a2 = 0x00000003 %
0000001a : 00b54633;   % 36: 	xor a2, a0, a1		# a2 = 0x00000002 %
0000001b : 00b52633;   % 37: 	slt a2, a0, a1		# a2 = 0x00000001 %
0000001c : 01c006ef;   % 39: 	jal a3, PULO		# pula pra PULO %
0000001d : 00000013;   % 40: 	nop %
0000001e : 00000013;   % 41: 	nop %
0000001f : eeeef537;   % 42: 	li a0, 0xEEEEEEEE 	# não deve rodar %
00000020 : eee50513;   % 42:  %
00000021 : eeeef537;   % 43: 	li a0, 0xEEEEEEEE	# não deve rodar %
00000022 : eee50513;   % 43:  %
00000023 : 000505b3;   % 45: PULO:	add a1, a0, zero	# a1 = 0x00000001 %
00000024 : 00000013;   % 46: 	nop %
00000025 : 00000013;   % 47: 	nop %
00000026 : 00000013;   % 48: 	nop %
00000027 : 02b50063;   % 49: 	beq a0, a1, PULO2	# pula pra PULO2 %
00000028 : eeeef537;   % 50: 	li a0, 0xEEEEEEEE	# não deve rodar, a0=0xEEEEEEEE %
00000029 : eee50513;   % 50:  %
0000002a : eeeef537;   % 51: 	li a0, 0xEEEEEEEE	# não deve rodar, a0=0xEEEEEEEE %
0000002b : eee50513;   % 51:  %
0000002c : ccccd537;   % 53: 	li a0, 0xCCCCCCCC	# deve rodar ao final, a0=0xCCCCCCCC %
0000002d : ccc50513;   % 53:  %
0000002e : 030006ef;   % 54: 	jal a3, FIM %
0000002f : 00000593;   % 56: PULO2:	li a1, 0x00000000	# a1 = 0x00000000 %
00000030 : 00000013;   % 57: 	nop %
00000031 : 00000013;   % 58: 	nop %
00000032 : 00000013;   % 59: 	nop %
00000033 : 0c058567;   % 60: 	jalr a0, a1, 192	# a0 = pc, vai pra ultima instrução %
00000034 : eeeef537;   % 61: 	li a0, 0xEEEEEEEE	# não deve rodar, a0=0xEEEEEEEE %
00000035 : eee50513;   % 61:  %
00000036 : eeeef537;   % 62: 	li a0, 0xEEEEEEEE	# não deve rodar, a0=0xEEEEEEEE %
00000037 : eee50513;   % 62:  %
00000038 : eeeef537;   % 63: 	li a0, 0xEEEEEEEE	# não deve rodar, a0=0xEEEEEEEE %
00000039 : eee50513;   % 63:  %
0000003a : ccccd5b7;   % 65: FIM:	li a1, 0xCCCCCCCC %
0000003b : ccc58593;   % 65:  %
END;
